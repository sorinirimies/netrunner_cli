name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build and release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cliff
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: git-cliff

      - name: Update version and generate changelog
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF_NAME#v}
          echo "Updating version to: $VERSION"
          
          # Update Cargo.toml version
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" Cargo.toml
          
          # Get the previous tag for comparison
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Generate a comprehensive release changelog
          echo "# NetRunner CLI ${VERSION}" > RELEASE_CHANGELOG.md
          echo "" >> RELEASE_CHANGELOG.md
          echo "## 🚀 What's New" >> RELEASE_CHANGELOG.md
          echo "" >> RELEASE_CHANGELOG.md
          
          if [ -n "$LAST_TAG" ]; then
            echo "### 📝 Changes since ${LAST_TAG}:" >> RELEASE_CHANGELOG.md
            echo "" >> RELEASE_CHANGELOG.md
            
            # Get commits since last tag and categorize them
            git log --pretty=format:"%s" ${LAST_TAG}..HEAD | while read -r commit; do
              case "$commit" in
                feat*|add*|Add*)
                  echo "- ✨ $commit" >> RELEASE_CHANGELOG.md
                  ;;
                fix*|Fix*)
                  echo "- 🐛 $commit" >> RELEASE_CHANGELOG.md
                  ;;
                docs*|doc*|Doc*)
                  echo "- 📚 $commit" >> RELEASE_CHANGELOG.md
                  ;;
                refactor*|Refactor*)
                  echo "- ♻️ $commit" >> RELEASE_CHANGELOG.md
                  ;;
                test*|Test*)
                  echo "- 🧪 $commit" >> RELEASE_CHANGELOG.md
                  ;;
                chore*|Chore*)
                  echo "- 🔧 $commit" >> RELEASE_CHANGELOG.md
                  ;;
                *)
                  echo "- 📦 $commit" >> RELEASE_CHANGELOG.md
                  ;;
              esac
            done
          else
            echo "### 🎉 Initial Release" >> RELEASE_CHANGELOG.md
            echo "" >> RELEASE_CHANGELOG.md
            echo "This is the first release of NetRunner CLI - a feature-rich Rust-based CLI to test and analyze your internet connection." >> RELEASE_CHANGELOG.md
            echo "" >> RELEASE_CHANGELOG.md
            echo "#### ✨ Key Features:" >> RELEASE_CHANGELOG.md
            echo "- 🌍 Dynamic nearest server detection" >> RELEASE_CHANGELOG.md
            echo "- 📊 Comprehensive speed testing (download, upload, ping)" >> RELEASE_CHANGELOG.md
            echo "- 🎨 Beautiful cyberpunk-themed UI with animations" >> RELEASE_CHANGELOG.md
            echo "- 📈 Historical test results tracking" >> RELEASE_CHANGELOG.md
            echo "- 🔍 Network diagnostics and quality ratings" >> RELEASE_CHANGELOG.md
            echo "- 💻 Cross-platform support (Windows, macOS, Linux)" >> RELEASE_CHANGELOG.md
          fi
          
          echo "" >> RELEASE_CHANGELOG.md
          echo "## 📦 Installation" >> RELEASE_CHANGELOG.md
          echo "" >> RELEASE_CHANGELOG.md
          echo "\`\`\`bash" >> RELEASE_CHANGELOG.md
          echo "cargo install netrunner_cli" >> RELEASE_CHANGELOG.md
          echo "\`\`\`" >> RELEASE_CHANGELOG.md
          echo "" >> RELEASE_CHANGELOG.md
          echo "## 🚀 Quick Start" >> RELEASE_CHANGELOG.md
          echo "" >> RELEASE_CHANGELOG.md
          echo "\`\`\`bash" >> RELEASE_CHANGELOG.md
          echo "# Run interactive menu" >> RELEASE_CHANGELOG.md
          echo "netrunner_cli" >> RELEASE_CHANGELOG.md
          echo "" >> RELEASE_CHANGELOG.md
          echo "# Run speed test directly" >> RELEASE_CHANGELOG.md
          echo "netrunner_cli -m speed" >> RELEASE_CHANGELOG.md
          echo "\`\`\`" >> RELEASE_CHANGELOG.md
          
          # Update full changelog with git-cliff if available
          git-cliff --tag "${{ github.ref_name }}" --output CHANGELOG.md 2>/dev/null || echo "Could not update full changelog with git-cliff"
          
          # Show the generated release notes
          echo "Generated release notes:"
          cat RELEASE_CHANGELOG.md

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Package binary (Linux)
        run: |
          tar -C target/release -czvf netrunner_cli-${{ github.ref_name }}-linux-x86_64.tar.gz netrunner_cli

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_CHANGELOG.md
          files: |
            netrunner_cli-${{ github.ref_name }}-linux-x86_64.tar.gz
            LICENSE
            README.md
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.CI_OPERATIONS_SECRET }}

      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CRATES_IO_TOKEN }} --allow-dirty
